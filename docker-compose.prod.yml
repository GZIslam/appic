version: "3.8"

services:
  traefik:
    image: "traefik:v3.3"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - 80:80
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vite.rule=Host(`vite.localhost`)"
      - "traefik.http.services.vite.loadbalancer.server.port=80"
  backend:
    container_name: backend
    build: ./backend
    ports:
      - 3000:3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
    depends_on:
      - postgres
  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    environment:
      - PG_DATA=/pgdata
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/pgdata